@page "/TaskDescription/{TodoItemId}"

@using SittkoBlazorServer.Data
@using SittkoBlazorServer.Interfaces
@rendermode InteractiveServer
@inject ITodoListService _servise
@inject NavigationManager Navigation

<h3>TaskDescriptionComponent</h3>



<EditForm Model="@TodoItem" OnValidSubmit="ChangedSave">
    <DataAnnotationsValidator/>
    <MudGrid Justify="Justify.Center">
        <MudItem xs="12" sm="7" >
            <MudCard>
                <MudCardContent>
                    <MudStack Class="pa-4" Row="true">
                        <MudCheckBox T="bool" @bind-Value="TodoItem.Completed"/>
                        <MudTextField @bind-Value="TodoItem.Name"
                                      For="@(() => TodoItem.Name)"
                                      HelperText="Задача"/>
                    </MudStack>
                    <MudDatePicker @bind-Date="CreationDate"
                                   ReadOnly="true"
                                  HelperText="Дата создания"/>
                    <MudDatePicker @bind-Date="TodoItem.ExecutionDate" 
                                   HelperText="Дата закрытия" />
                    <MudTextField T="string" Label="Добавить заметку" Lines="3"
                                  Variant="Variant.Outlined"
                                  @bind-Value="@TodoItem.Description"
                                  Adornment="Adornment.End"
                                  AdornmentIcon="@Icons.Material.Filled.Api"/>
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Сохранить</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>
@* 
<MudTextField T="DateTime?" Format="s"
              Value="@TodoItem.CreationDate"
              InputType="InputType.DateTimeLocal"
              HelperText="Дата создания"/>
<MudTextField T="DateTime?" Format="s"
              Value="TodoItem.ExecutionDate"
              InputType="InputType.Date"
              HelperText="Дата закрытия"/> *@

@code{
    [Parameter] public string TodoItemId { get; set; } ="";
    [Parameter] public TodoItem TodoItem { get; set; } = new TodoItem();
    private DateTime? CreationDate = new();
    protected override async Task OnInitializedAsync()
    {
        TodoItem = await _servise.TodoItemByIdAsync(Guid.Parse(TodoItemId));
        CreationDate = TodoItem.CreationDate;
    }

    private async Task ChangedSave()
    {
        await _servise.TodoTaskUpdateAsync(TodoItem);
        Navigation.NavigateTo("/");
    }

}


