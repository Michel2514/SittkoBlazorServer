@page "/TodoListAdd"

@using SittkoBlazorServer.Data
@using SittkoBlazorServer.Interfaces
@rendermode InteractiveServer

@inject ITodoListService _servise


 <div class="tre g-col-6">
    <EditForm Model="_todoItemComponent" OnValidSubmit="SaveTodoList">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <MudTextField Label="Username"
                      @bind-Value="_todoItemComponent.Name" 
                      For="@(() => _todoItemComponent.Name)"
                      RequiredError="!"
                      OnlyValidateIfDirty="true"/>
    </EditForm>
</div> 


@code {
    [Parameter] 
    public EventCallback<TodoItem> OnAfterItemAdded { get; set; }
    private TodoItem _todoItemComponent = new();


    protected override void OnInitialized()
    {
    }

    private async Task SaveTodoList()
    {
        await _servise.TodoTaskCreateVoidAsync(_todoItemComponent);
        await OnAfterItemAdded.InvokeAsync(_todoItemComponent);
        _todoItemComponent = new();
    }

    public string Text { get; set; } = "????";
    public string ButtonText { get; set; } = "Click Me";
    public int ButtonClicked { get; set; }

    void ButtonOnClick()
    {
        ButtonClicked += 1;
        Text = $"Awesome x {ButtonClicked}";
        ButtonText = "Click Me Again";
    }
    
    
}