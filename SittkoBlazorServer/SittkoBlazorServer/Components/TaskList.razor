@page "/TODOList"
@using Interfaces
@using Data
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Forms
@rendermode InteractiveServer
@inject ITodoListService _servise


<h3>TodoLists</h3>
<TodoListAdd/>
<button class="btn btn-primary" @onclick="AllList">Все</button>
<button class="btn btn-primary" @onclick="ListComplited">Выполненые</button>
<button class="btn btn-primary" @onclick="ListActive">Активные</button>
<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Дата</th>
            <th>Задача</th>
            <th>Состояние</th>
            <th>Дата закрытия</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in nre)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.CreationDate</td>
                <td>@item.Name</td>
                <td>
                    <InputCheckbox @bind-Value="item.Completed" @onclick="SetDate"></InputCheckbox>
                </td>
                <td>
                    @* <InputDate @bind-Value="item.ExecutionDate" @onchange="@(_=> SetDate(item.Id))"></InputDate> *@
                    <InputDate @bind-Value="item.ExecutionDate" @onclick="SetDate"></InputDate>
                </td>
                <td>
                    @* <button class="btn btn-outline-danger" @onclick="@(e=> Delete(item.Id))">X</button> *@
                </td>
                <td></td>
            </tr>
        }
    </tbody>
</table>



@code {
    DateOnly clouth = new();
    List<TodoList> nre { get; set; } = new();
    TodoList todo { get; set; } = new();

    void AllList()
    {
        nre = _servise.TODOListGetAll();
    }
    void ListComplited()
    {
        nre = _servise.TODOListCompliteds(true);
    }

    void ListActive()
    {
        nre = _servise.TODOListCompliteds(false);
    }
    void Complet(TodoList mod)
    {

        var model = _servise.TODOListById(mod.Id);
        if (model.Completed == false)
        {
            model.Completed = true;
            _servise.TODOListUpdated(model);

            ListActive();

        }
        else
        {
            model.Completed = false;
            _servise.TODOListUpdated(model);

            ListComplited();
        }
    }
    void Delete(Guid id)
    {
        _servise.TODOListDeleted(id);
    }
    void SetDate()
    {        
        _servise.TodoListsUpdated(nre);
    }
}