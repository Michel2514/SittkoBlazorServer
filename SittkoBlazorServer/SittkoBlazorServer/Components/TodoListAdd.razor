@page "/TodoListAdd"

@using SittkoBlazorServer.Data
@using SittkoBlazorServer.Interfaces
@rendermode InteractiveServer

@inject ITodoListService _servise




 <div class="tre g-col-6">
    <EditForm Model="_todoItemComponent" OnValidSubmit="SaveTodoList">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <MudTextField Label="Добавить задачу"
                      @bind-Value="_todoItemComponent.Name" 
                      For="@(() => _todoItemComponent.Name)"
                      RequiredError="!"
                      OnlyValidateIfDirty="true"/>
    </EditForm>
</div> 

@code {
    StretchItems stretch = StretchItems.Start;
    RenderFragment content = null;
    RenderFragment rf1 = @<MudText Typo="@Typo.h6">I Am Field</MudText>;
    string color = "#6cf014";
}
 
@code {
    [Parameter] 
    public EventCallback<TodoItem> OnAfterItemAdded { get; set; }
    private TodoItem _todoItemComponent = new();

    private async Task SaveTodoList()
    {
        await _servise.TodoTaskCreateVoidAsync(_todoItemComponent);
        await OnAfterItemAdded.InvokeAsync(_todoItemComponent);
        _todoItemComponent = new();
    }
    
}